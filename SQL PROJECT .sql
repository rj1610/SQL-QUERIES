-- 1) 
CREATE  DATABASE PROJECT;

 -- 2) 
 USE PROJECT;
 
 -- CREATE TABLE EMPLOYEE NUMBER 1 
 
 -- 3) 
 CREATE TABLE EMPLOYEE(
 EMP_ID INT PRIMARY KEY,
 NAME VARCHAR(50) NOT NULL,
DEPARTMENT  VARCHAR(50) NOT NULL,
 SALARY INT defaulT '0', 
 CITY VARCHAR(50) NOT NULL,
 CONTACT INT );
 -- 4)
 ALTER TABLE EMPLOYEE
MODIFY DEPARTMENT VARCHAR(50) ;
 insert into EMPLOYEE(EMP_ID,name,age,department,salary,city,contact)
values(100,'Sachin',26,'IT',85000,'Mumbai',1234);-- Approach 1

insert into EMPLOYEE
values(101,'Siddhesh',27,'Support',80000,'Thane',4879);-- Approach2

insert into EMPLOYEE
values(103,'Aarthi',25,'HR',55000,'Pune',1111),
(104,'Sameer',28,'IT',65000,'Thane',1222),
(105,'Aqib',29,'IT',75000,'Mumbai',4444);

insert into EMPLOYEE
values(106,'Jawwad',27,'Support',40000,'Powai',9999);

insert into EMPLOYEE
values(107,'Om',26,'HR',60000,'Kanpur',7511),
(108,'Rohit',28,'IT',78000,'Thane',1233),
(109,'Vishal',29,'IT',95000,'Mumbai',7844);

insert into EMPLOYEE
values(110,'Sukanya',25,'HR',65000,'Thane',64654),
(111,'Hindavi',25,'IT',88000,'Powai',9823),
(112,'Laxmipriya',26,'Support',82000,'Mumbai',8532);
SELECT * FROM EMPLOYEE;
 
 -- CREATE COMPANY TABLE NUMBER 2
 
 CREATE TABLE COMPANY(
 EMP_ID INT , foreign key (EMP_ID) references EMPLOYEE(EMP_ID),
 BONUS INT(50),
 OFFICE_NAME VARCHAR(50) NOT NULL);
 
 DESC COMPANY;
 INSERT INTO COMPANY 
 VALUES(100,1000,'MARUTI'),
 (101,2000,'HYANDAI'),
 (103,2000,'TATA'),
 (104,2000,'MARUTI'),
 (105,2000,'KIA'),
 (106,2000,'TATA'),
 (107,3000,'TOYOTA'),
 (108,5000,'FERRARI'),
 (109,5000,'BMW'),
 (109,5000,'SUPRA');
 
 SELECT * FROM COMPANY;
 
 -- 5)CHANGE THE DATATYPE OF EMPLOYEE TABLE NAME VARCHAR(20)
 ALTER TABLE EMPLOYEE
 MODIFY NAME VARCHAR(20);
 
 -- 6)RENAME CONATCT TO PHONE IN EMPLOYEE TABLE 
ALTER TABLE EMPLOYEE 
RENAME COLUMN CONTACT TO PHONE;

-- 7)CHANGE PHONE TO CONTACT WITH DATATYPE
ALTER TABLE EMPLOYEE
CHANGE PHONE CONTACT INT(20); 

-- 8)UPDATE NAME IN ROW FIRST AS ROHIT 
UPDATE EMPLOYEE
SET NAME = 'ROHIT'
WHERE EMP_ID = 1;

-- 9)DELETE A RECORD WHERE EMP_ID IS 112
DELETE FROM EMPLOYEE
WHERE EMP_ID = 112;

-- 10)Increase the salary of all employees in the EMPLOYEE table by 10%.
UPDATE EMPLOYEE
SET SALARY = SALARY*1.1;

-- 11) SHOW THE TABLES AVAILABLE IN DB PROJECT
SHOW TABLES;
 
 -- 12)DISPLAY NAME AS FIRST_NAME FROM EMP TABLE USING ALIAS
SELECT NAME AS FIRST_NAME 
FROM EMPLOYEE;

-- 13)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES WORKING IN IT DEPARTMENT USING ARITHMETIC OPERATOR
SELECT* 
FROM EMPLOYEE
WHERE DEPARTMENT = 'IT';

-- 14)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES WORKING EXCLUDING IT DEPARTMENT
SELECT *
FROM EMPLOYEE
WHERE DEPARTMENT!= 'IT';

-- 15)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES WHOSE SALARY IS EITHER OR ABOVE 80000
SELECT*
FROM EMPLOYEE
WHERE SALARY >=80000;

-- 16)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES WORKING IN IT DEPARTMENT WHOSE SALARY IS ABOVE 80000
SELECT *
FROM EMPLOYEE
WHERE SALARY >80000 AND DEPARTMENT = 'IT';

-- 17)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES WORKING IN SALES DEPARTMENT OR WHOSE SALARY IS ABOVE 80000
SELECT*
FROM EMPLOYEE
WHERE SALARY >80000 OR DEPARTMENT = 'SALES';

-- 18)DISPLAY ALL THE UNIQUE DEPARTMENTS FROM THE EMPLOYEES TABLE
SELECT DISTINCT DEPARTMENT FROM EMPLOYEE;

-- 19)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES LIVING IN MUMBAI OR POWAI OR KANPUR USING MEMBERSHIP OPERATOR

SELECT *
FROM EMPLOYEE
WHERE CITY IN ('Mumbai','Kanpur','Powai');

-- 20)DISPLAY ALL THE RECORDS OF ALL THE COLUMNS OF EMPLOYEES LIVING NOT IN MUMBAI OR POWAI OR KANPUR USING MEMBERSHIP OPERATOR
SELECT *
FROM EMPLOYEE
WHERE CITY NOT IN ('Mumbai','Kanpur','Powai');

-- 21)DISPLAY ONLY ONE  RECORDS OF ALL THE COLUMNS OF EMPLOYEES WORKING IN IT DEPARTMENT AND LIVING IN THANE

SELECT *
FROM EMPLOYEE
WHERE CITY = 'THANE'
AND DEPARTMENT = 'IT'
LIMIT 1;

-- 22)DISPLAY RECORD OF EMPLOYEE HAVING HIGHEST SALARY

SELECT *
FROM EMPLOYEE
 WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEE);
 
 -- 23)DISPLAY RECORD OF EMPLOYEE HAVING SECOND HIGHEST SALARY
 SELECT* FROM EMPLOYEE ORDER BY SALARY DESC;
 SELECT *
 FROM EMPLOYEE
 WHERE SALARY= (SELECT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT 1 OFFSET 1 );
 
  -- 24)DISPLAY RECORD OF EMPLOYEE HAVING LETTER 'A' AT FIRST IN NAME COLUMN
  
  SELECT *
  FROM EMPLOYEE 
  WHERE NAME  LIKE 'A%';
  
   -- 25)DISPLAY RECORD OF EMPLOYEE HAVING LETTER 'A' AT SECOND IN NAME COLUMN
   
   SELECT* 
   FROM EMPLOYEE
   WHERE NAME LIKE '_A%';
   
    -- 26)DISPLAY COUNT OF SALARY IN EMPLOYEE TABLE
    
    SELECT COUNT(SALARY)
    FROM EMPLOYEE;
    
    -- 27)DISPLAY THE MININUM SALARY FROM SALARY COLUMN

    SELECT* 
    FROM EMPLOYEE
    WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEE );
    
    -- 28)DISPLAY RECORD OF AVERAGE SALARY IN EMPLOYEE TABLE
    
SELECt  avg(SALARY) FROM EMPLOYEE;

-- 29)DISPLAY ALL THE RECORDS OF SALARY IN DESCENDING ORDER FORMAT

SELECT * FROM EMPLOYEE  ORDER BY SALARY DESC;

   -- 30)DISPLAY ALL THE RECORDS OF SALARY IN ASCENDING ORDER FORMAT
   
   SELECT* FROM EMPLOYEE ORDER BY SALARY ASC;
   
   -- 31)DISPLAY A CONCATENATE FUNCTION JOIN NAME AND CITY FROM EMPLOYEE TABLE
   
   SELECT CONCAT(NAME,' -->', CITY) AS NEW_COLUMN FROM EMPLOYEE;
   
   -- 32)DISPLAY THE RECORDS OF NAME IN LOWER CASE FORMAT
   
   SELECT LOWER(NAME) FROM EMPLOYEE ;

   -- 33)DISPLAY THE RECORDS OF CITY IN UPPER CASE FORMAT
   
   SELECT UPPER(CITY) FROM EMPLOYEE;
   
   -- 34)DISPLAY THE CONTACT AS PHONE 
   
   SELECT REPLACE('CONTACT','CONTACT','PHONE') AS NEW_COLUMN;

-- 35)DISPLAY THE LENGTH OF COLUMN NAME FROM EMPLOYEE TABLE

SELECT LENGTH(NAME) FROM EMPLOYEE;

-- 36) DISPLAY THE DATE OF EMP_ID WHEN ENTERED IN TABLE

SELECT CURDATE(),EMP_ID FROM EMPLOYEE;

   -- 37) DISPLAY THE TIME OF EMP_ID = 100 WHEN ENTERED IN TABLE
  
  SELECT NOW() FROM EMPLOYEE WHERE EMP_ID = 100;
  
  -- 38)PERFORM AN INNER JOIN ON EMPLOYEE AND COMPANY TABLE USING NAME DEPARTMENT AND OFFICE_NAME COLUMN
  
  SELECT 
EMPLOYEE.Name,EMPLOYEE.DEPARTMENT,COMPANY.OFFICE_NAME
FROM EMPLOYEE 
INNER JOIN COMPANY
ON EMPLOYEE.EMP_ID = COMPANY.EMP_ID;

-- 39)PERFORM AN LEFT JOIN ON EMPLOYEE AND COMPANY TABLE USING NAME AND OFFICE_Name

SELECT EMPLOYEE.NAME ,COMPANY.OFFICE_NAME
FROM EMPLOYEE LEFT JOIN COMPANY
ON EMPLOYEE.EMP_ID = COMPANY.EMP_ID;

-- 40)PERFORM AN RIGHT JOIN ON EMPLOYEE AND COMPANY TABLE USING CITY AND OFFICE_NAME

SELECT EMPLOYEE.CITY AS ADDRESS,COMPANY.OFFICE_NAME AS OFFICE
FROM EMPLOYEE RIGHT JOIN COMPANY
 ON EMPLOYEE.EMP_ID=COMPANY.EMP_ID;
 
 -- 41)PERFORM AN FULL JOIN ON EMPLOYEE AND COMPANY TABLE
 
 SELECT*
 FROM EMPLOYEE
 LEFT JOIN COMPANY
 ON EMPLOYEE.EMP_ID = COMPANY.EMP_ID
 UNION
  SELECT*
 FROM EMPLOYEE
 RIGHT JOIN COMPANY
 ON EMPLOYEE.EMP_ID = COMPANY.EMP_ID;
 
 -- 42)PERFORM AN CROSS JOIN ON EMPLOYEE AND COMPANY TABLE
 
 SELECT *
FROM EMPLOYEE
CROSS JOIN COMPANY;

 -- 43)PERFORM AN SELF JOIN ON EMPLOYEE USING NAME AND CITY COLUMN
 
SELECT E1.NAME AS NEW_NAME, E2.CITY AS NEW_CITY
FROM EMPLOYEE E1  JOIN EMPLOYEE E2
ON E1.EMP_ID = E2.EMP_ID; 

-- 44) CREATE A VIEW USING COLUMN NAME CITY AND SALARY FROM EMPLOYEE TABLE

CREATE VIEW NEW_TABLE1 AS
SELECT NAME,CITY ,SALARY
FROM EMPLOYEE;

-- 45) WRITE A QUERY TO SEE INDEXES IN EMPLOYEE TABLE

 SHOW INDEXES FROM EMPLOYEE IN PROJECT;
 
 -- 46)DISPLAY RECORDS OF EMPLOYEES OF CITY AND AGE USING GROUP BY FUNCTION 
 
 SELECT CITY , AGE FROM EMPLOYEE GROUP BY CITY,AGE ;
 
 -- 47)DISPLAY THE RECORDS OF EMPLOYEES HAVING SALARY LESS THAN 80000 AND THEIR CITY
 
 SELECT CITY,SALARY
 FROM EMPLOYEE 
 GROUP BY CITY,SALARY
 HAVING SUM(SALARY) <80000;
 
 -- 48)WRITE A QUERY TO DISPLAY THE SALARY OF EMPLOYEES WHICH GREATER SAALRY THAN EMPLOYEE WHOSE  EMP_ID= 100

SELECT SALARY,EMP_ID
FROM EMPLOYEE
WHERE SALARY>
(SELECT SALARY FROM EMPLOYEE WHERE EMP_ID = 100);

-- 49)DISPLAY THE NAME OF EMPLOYEES WHICH HAVE SALARY  GREATER THAN 88000,90000,100000,95000 USING 'ANY' SUBQUERY

SELECT Name
FROM Employee
WHERE Salary > ANY (
    SELECT 88000 UNION
    SELECT 90000 UNION
    SELECT 100000 UNION
    SELECT 95000
);

-- 50) UPDATE NAME AS RAHUL IN VIEW TABLE  WHERE  NAME = SACHIN 

UPDATE NEW_TABLE1
SET NAME = 'RAHUL'
WHERE NAME = 'SACHIN';


/* ---------------------------------PROJECT FOR MY SQL COMPLETED THANL YOU-----------------------------------------*/



